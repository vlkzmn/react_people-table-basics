{"version":3,"sources":["App.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","status","statusText","json","PersonLink","person","name","sex","slug","PeopleTable","people","useParams","getPerson","find","item","map","born","died","motherName","fatherName","url","mother","father","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","loading","setLoading","useEffect","catch","finally","length","HomePage","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.92c391e3.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = (\n  { person: { name, sex, slug } },\n) => (\n  <Link\n    to={`/people/${slug}`}\n    className={classNames({ 'has-text-danger': sex === 'f' })}\n  >\n    {name}\n  </Link>\n);\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  function getPerson(name: string | null) {\n    const person = people.find(item => item.name === name);\n\n    if (person) {\n      return <PersonLink person={person} />;\n    }\n\n    return name || '-';\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, motherName, fatherName, slug: url,\n          } = person;\n\n          const mother = getPerson(motherName);\n          const father = getPerson(fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={url}\n              className={classNames({\n                'has-background-warning': slug === url,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{mother}</td>\n              <td>{father}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n        setErrorMessage('');\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading\n            ? <Loader />\n            : (!people.length && !errorMessage && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            ))}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}